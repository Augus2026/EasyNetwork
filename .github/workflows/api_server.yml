name: api server build

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always
  
jobs:
  # binary build
  build:
    name: Build - ${{ matrix.job.name }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        job:
          - { name: "amd64",   target: "x86_64-unknown-linux-musl" }
          - { name: "arm64v8", target: "aarch64-unknown-linux-musl" }
          - { name: "armv7",   target: "armv7-unknown-linux-musleabihf" }
          - { name: "i386",    target: "i686-unknown-linux-musl" }

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "1.81"
          override: true
          default: true
          components: rustfmt
          profile: minimal
          target: ${{ matrix.job.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=${{ matrix.job.target }}
          use-cross: true
          working-directory: api_server 

      - name: Exec chmod
        run: |
          cd api_server
          chmod -v a+x target/${{ matrix.job.target }}/release/*

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-${{ matrix.job.name }}
          path: api_server/target/${{ matrix.job.target }}/release/api_server
          if-no-files-found: error
